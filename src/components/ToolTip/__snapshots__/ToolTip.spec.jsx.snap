// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`ToolTip [common] example testing should match snapshot(s) for 1.interactive 1`] = `
<ContextMenu
  alignment="center"
  className="lucid-ToolTip"
  direction="right"
  directonOffset={15}
  getAlignmentOffset={[Function]}
  isExpanded={false}
  minWidthOffset={0}
  onClickOut={null}
  onMouseOut={[Function]}
  onMouseOver={[Function]}
  portalId={null}
>
  <ContextMenu.Target
    className="lucid-ToolTip-Target"
    elementType="span"
  >
    <div>
      Target 
      right
       
      start
    </div>
  </ContextMenu.Target>
  <ContextMenu.FlyOut
    className="lucid-ToolTip-FlyOut lucid-ToolTip-FlyOut-right lucid-ToolTip-FlyOut-start lucid-ToolTip-FlyOut-default"
    onMouseOut={[Function]}
    onMouseOver={[Function]}
    style={
      Object {
        "maxWidth": 200,
      }
    }
  >
    <h2
      className="lucid-ToolTip-FlyOut-Title"
    >
      Title: 
      right
       
      start
    </h2>
    ToolTip is a utility component to create a transient message anchored to another component. My direction is "
    right
    ". My alignment is "
    start
    ".
  </ContextMenu.FlyOut>
</ContextMenu>
`;

exports[`ToolTip [common] example testing should match snapshot(s) for 1.interactive 2`] = `
<ContextMenu
  alignment="center"
  className="lucid-ToolTip"
  direction="right"
  directonOffset={15}
  getAlignmentOffset={[Function]}
  isExpanded={false}
  minWidthOffset={0}
  onClickOut={null}
  onMouseOut={[Function]}
  onMouseOver={[Function]}
  portalId={null}
>
  <ContextMenu.Target
    className="lucid-ToolTip-Target"
    elementType="span"
  >
    <div>
      Target 
      right
       
      center
    </div>
  </ContextMenu.Target>
  <ContextMenu.FlyOut
    className="lucid-ToolTip-FlyOut lucid-ToolTip-FlyOut-right lucid-ToolTip-FlyOut-center lucid-ToolTip-FlyOut-default"
    onMouseOut={[Function]}
    onMouseOver={[Function]}
    style={
      Object {
        "maxWidth": 200,
      }
    }
  >
    <h2
      className="lucid-ToolTip-FlyOut-Title"
    >
      Title: 
      right
       
      center
    </h2>
    ToolTip is a utility component to create a transient message anchored to another component. My direction is "
    right
    ". My alignment is "
    center
    ".
  </ContextMenu.FlyOut>
</ContextMenu>
`;

exports[`ToolTip [common] example testing should match snapshot(s) for 1.interactive 3`] = `
<ContextMenu
  alignment="center"
  className="lucid-ToolTip"
  direction="right"
  directonOffset={15}
  getAlignmentOffset={[Function]}
  isExpanded={false}
  minWidthOffset={0}
  onClickOut={null}
  onMouseOut={[Function]}
  onMouseOver={[Function]}
  portalId={null}
>
  <ContextMenu.Target
    className="lucid-ToolTip-Target"
    elementType="span"
  >
    <div>
      Target 
      right
       
      end
    </div>
  </ContextMenu.Target>
  <ContextMenu.FlyOut
    className="lucid-ToolTip-FlyOut lucid-ToolTip-FlyOut-right lucid-ToolTip-FlyOut-end lucid-ToolTip-FlyOut-default"
    onMouseOut={[Function]}
    onMouseOver={[Function]}
    style={
      Object {
        "maxWidth": 200,
      }
    }
  >
    <h2
      className="lucid-ToolTip-FlyOut-Title"
    >
      Title: 
      right
       
      end
    </h2>
    ToolTip is a utility component to create a transient message anchored to another component. My direction is "
    right
    ". My alignment is "
    end
    ".
  </ContextMenu.FlyOut>
</ContextMenu>
`;

exports[`ToolTip [common] example testing should match snapshot(s) for 1.interactive 4`] = `
<ContextMenu
  alignment="center"
  className="lucid-ToolTip"
  direction="up"
  directonOffset={15}
  getAlignmentOffset={[Function]}
  isExpanded={false}
  minWidthOffset={0}
  onClickOut={null}
  onMouseOut={[Function]}
  onMouseOver={[Function]}
  portalId={null}
>
  <ContextMenu.Target
    className="lucid-ToolTip-Target"
    elementType="span"
  >
    <div>
      Target 
      up
       
      start
    </div>
  </ContextMenu.Target>
  <ContextMenu.FlyOut
    className="lucid-ToolTip-FlyOut lucid-ToolTip-FlyOut-up lucid-ToolTip-FlyOut-start lucid-ToolTip-FlyOut-default"
    onMouseOut={[Function]}
    onMouseOver={[Function]}
    style={
      Object {
        "maxWidth": 200,
      }
    }
  >
    <h2
      className="lucid-ToolTip-FlyOut-Title"
    >
      Title: 
      up
       
      start
    </h2>
    ToolTip is a utility component to create a transient message anchored to another component. My direction is "
    up
    ". My alignment is "
    start
    ".
  </ContextMenu.FlyOut>
</ContextMenu>
`;

exports[`ToolTip [common] example testing should match snapshot(s) for 1.interactive 5`] = `
<ContextMenu
  alignment="center"
  className="lucid-ToolTip"
  direction="up"
  directonOffset={15}
  getAlignmentOffset={[Function]}
  isExpanded={false}
  minWidthOffset={0}
  onClickOut={null}
  onMouseOut={[Function]}
  onMouseOver={[Function]}
  portalId={null}
>
  <ContextMenu.Target
    className="lucid-ToolTip-Target"
    elementType="span"
  >
    <div>
      Target 
      up
       
      center
    </div>
  </ContextMenu.Target>
  <ContextMenu.FlyOut
    className="lucid-ToolTip-FlyOut lucid-ToolTip-FlyOut-up lucid-ToolTip-FlyOut-center lucid-ToolTip-FlyOut-default"
    onMouseOut={[Function]}
    onMouseOver={[Function]}
    style={
      Object {
        "maxWidth": 200,
      }
    }
  >
    <h2
      className="lucid-ToolTip-FlyOut-Title"
    >
      Title: 
      up
       
      center
    </h2>
    ToolTip is a utility component to create a transient message anchored to another component. My direction is "
    up
    ". My alignment is "
    center
    ".
  </ContextMenu.FlyOut>
</ContextMenu>
`;

exports[`ToolTip [common] example testing should match snapshot(s) for 1.interactive 6`] = `
<ContextMenu
  alignment="center"
  className="lucid-ToolTip"
  direction="up"
  directonOffset={15}
  getAlignmentOffset={[Function]}
  isExpanded={false}
  minWidthOffset={0}
  onClickOut={null}
  onMouseOut={[Function]}
  onMouseOver={[Function]}
  portalId={null}
>
  <ContextMenu.Target
    className="lucid-ToolTip-Target"
    elementType="span"
  >
    <div>
      Target 
      up
       
      end
    </div>
  </ContextMenu.Target>
  <ContextMenu.FlyOut
    className="lucid-ToolTip-FlyOut lucid-ToolTip-FlyOut-up lucid-ToolTip-FlyOut-end lucid-ToolTip-FlyOut-default"
    onMouseOut={[Function]}
    onMouseOver={[Function]}
    style={
      Object {
        "maxWidth": 200,
      }
    }
  >
    <h2
      className="lucid-ToolTip-FlyOut-Title"
    >
      Title: 
      up
       
      end
    </h2>
    ToolTip is a utility component to create a transient message anchored to another component. My direction is "
    up
    ". My alignment is "
    end
    ".
  </ContextMenu.FlyOut>
</ContextMenu>
`;

exports[`ToolTip [common] example testing should match snapshot(s) for 1.interactive 7`] = `
<ContextMenu
  alignment="center"
  className="lucid-ToolTip"
  direction="down"
  directonOffset={15}
  getAlignmentOffset={[Function]}
  isExpanded={false}
  minWidthOffset={0}
  onClickOut={null}
  onMouseOut={[Function]}
  onMouseOver={[Function]}
  portalId={null}
>
  <ContextMenu.Target
    className="lucid-ToolTip-Target"
    elementType="span"
  >
    <div>
      Target 
      down
       
      start
    </div>
  </ContextMenu.Target>
  <ContextMenu.FlyOut
    className="lucid-ToolTip-FlyOut lucid-ToolTip-FlyOut-down lucid-ToolTip-FlyOut-start lucid-ToolTip-FlyOut-default"
    onMouseOut={[Function]}
    onMouseOver={[Function]}
    style={
      Object {
        "maxWidth": 200,
      }
    }
  >
    <h2
      className="lucid-ToolTip-FlyOut-Title"
    >
      Title: 
      down
       
      start
    </h2>
    ToolTip is a utility component to create a transient message anchored to another component. My direction is "
    down
    ". My alignment is "
    start
    ".
  </ContextMenu.FlyOut>
</ContextMenu>
`;

exports[`ToolTip [common] example testing should match snapshot(s) for 1.interactive 8`] = `
<ContextMenu
  alignment="center"
  className="lucid-ToolTip"
  direction="down"
  directonOffset={15}
  getAlignmentOffset={[Function]}
  isExpanded={false}
  minWidthOffset={0}
  onClickOut={null}
  onMouseOut={[Function]}
  onMouseOver={[Function]}
  portalId={null}
>
  <ContextMenu.Target
    className="lucid-ToolTip-Target"
    elementType="span"
  >
    <div>
      Target 
      down
       
      center
    </div>
  </ContextMenu.Target>
  <ContextMenu.FlyOut
    className="lucid-ToolTip-FlyOut lucid-ToolTip-FlyOut-down lucid-ToolTip-FlyOut-center lucid-ToolTip-FlyOut-default"
    onMouseOut={[Function]}
    onMouseOver={[Function]}
    style={
      Object {
        "maxWidth": 200,
      }
    }
  >
    <h2
      className="lucid-ToolTip-FlyOut-Title"
    >
      Title: 
      down
       
      center
    </h2>
    ToolTip is a utility component to create a transient message anchored to another component. My direction is "
    down
    ". My alignment is "
    center
    ".
  </ContextMenu.FlyOut>
</ContextMenu>
`;

exports[`ToolTip [common] example testing should match snapshot(s) for 1.interactive 9`] = `
<ContextMenu
  alignment="center"
  className="lucid-ToolTip"
  direction="down"
  directonOffset={15}
  getAlignmentOffset={[Function]}
  isExpanded={false}
  minWidthOffset={0}
  onClickOut={null}
  onMouseOut={[Function]}
  onMouseOver={[Function]}
  portalId={null}
>
  <ContextMenu.Target
    className="lucid-ToolTip-Target"
    elementType="span"
  >
    <div>
      Target 
      down
       
      end
    </div>
  </ContextMenu.Target>
  <ContextMenu.FlyOut
    className="lucid-ToolTip-FlyOut lucid-ToolTip-FlyOut-down lucid-ToolTip-FlyOut-end lucid-ToolTip-FlyOut-default"
    onMouseOut={[Function]}
    onMouseOver={[Function]}
    style={
      Object {
        "maxWidth": 200,
      }
    }
  >
    <h2
      className="lucid-ToolTip-FlyOut-Title"
    >
      Title: 
      down
       
      end
    </h2>
    ToolTip is a utility component to create a transient message anchored to another component. My direction is "
    down
    ". My alignment is "
    end
    ".
  </ContextMenu.FlyOut>
</ContextMenu>
`;

exports[`ToolTip [common] example testing should match snapshot(s) for 1.interactive 10`] = `
<ContextMenu
  alignment="center"
  className="lucid-ToolTip"
  direction="left"
  directonOffset={15}
  getAlignmentOffset={[Function]}
  isExpanded={false}
  minWidthOffset={0}
  onClickOut={null}
  onMouseOut={[Function]}
  onMouseOver={[Function]}
  portalId={null}
>
  <ContextMenu.Target
    className="lucid-ToolTip-Target"
    elementType="span"
  >
    <div>
      Target 
      left
       
      start
    </div>
  </ContextMenu.Target>
  <ContextMenu.FlyOut
    className="lucid-ToolTip-FlyOut lucid-ToolTip-FlyOut-left lucid-ToolTip-FlyOut-start lucid-ToolTip-FlyOut-default"
    onMouseOut={[Function]}
    onMouseOver={[Function]}
    style={
      Object {
        "maxWidth": 200,
      }
    }
  >
    <h2
      className="lucid-ToolTip-FlyOut-Title"
    >
      Title: 
      left
       
      start
    </h2>
    ToolTip is a utility component to create a transient message anchored to another component. My direction is "
    left
    ". My alignment is "
    start
    ".
  </ContextMenu.FlyOut>
</ContextMenu>
`;

exports[`ToolTip [common] example testing should match snapshot(s) for 1.interactive 11`] = `
<ContextMenu
  alignment="center"
  className="lucid-ToolTip"
  direction="left"
  directonOffset={15}
  getAlignmentOffset={[Function]}
  isExpanded={false}
  minWidthOffset={0}
  onClickOut={null}
  onMouseOut={[Function]}
  onMouseOver={[Function]}
  portalId={null}
>
  <ContextMenu.Target
    className="lucid-ToolTip-Target"
    elementType="span"
  >
    <div>
      Target 
      left
       
      center
    </div>
  </ContextMenu.Target>
  <ContextMenu.FlyOut
    className="lucid-ToolTip-FlyOut lucid-ToolTip-FlyOut-left lucid-ToolTip-FlyOut-center lucid-ToolTip-FlyOut-default"
    onMouseOut={[Function]}
    onMouseOver={[Function]}
    style={
      Object {
        "maxWidth": 200,
      }
    }
  >
    <h2
      className="lucid-ToolTip-FlyOut-Title"
    >
      Title: 
      left
       
      center
    </h2>
    ToolTip is a utility component to create a transient message anchored to another component. My direction is "
    left
    ". My alignment is "
    center
    ".
  </ContextMenu.FlyOut>
</ContextMenu>
`;

exports[`ToolTip [common] example testing should match snapshot(s) for 1.interactive 12`] = `
<ContextMenu
  alignment="center"
  className="lucid-ToolTip"
  direction="left"
  directonOffset={15}
  getAlignmentOffset={[Function]}
  isExpanded={false}
  minWidthOffset={0}
  onClickOut={null}
  onMouseOut={[Function]}
  onMouseOver={[Function]}
  portalId={null}
>
  <ContextMenu.Target
    className="lucid-ToolTip-Target"
    elementType="span"
  >
    <div>
      Target 
      left
       
      end
    </div>
  </ContextMenu.Target>
  <ContextMenu.FlyOut
    className="lucid-ToolTip-FlyOut lucid-ToolTip-FlyOut-left lucid-ToolTip-FlyOut-end lucid-ToolTip-FlyOut-default"
    onMouseOut={[Function]}
    onMouseOver={[Function]}
    style={
      Object {
        "maxWidth": 200,
      }
    }
  >
    <h2
      className="lucid-ToolTip-FlyOut-Title"
    >
      Title: 
      left
       
      end
    </h2>
    ToolTip is a utility component to create a transient message anchored to another component. My direction is "
    left
    ". My alignment is "
    end
    ".
  </ContextMenu.FlyOut>
</ContextMenu>
`;

exports[`ToolTip [common] example testing should match snapshot(s) for 2.close-button 1`] = `
<ContextMenu
  alignment="center"
  className="lucid-ToolTip"
  direction="right"
  directonOffset={15}
  getAlignmentOffset={[Function]}
  isExpanded={true}
  minWidthOffset={0}
  onClickOut={null}
  onMouseOut={[Function]}
  onMouseOver={[Function]}
  portalId={null}
>
  <ContextMenu.Target
    className="lucid-ToolTip-Target"
    elementType="span"
  >
    <div>
      Target
    </div>
  </ContextMenu.Target>
  <ContextMenu.FlyOut
    className="lucid-ToolTip-FlyOut lucid-ToolTip-FlyOut-right lucid-ToolTip-FlyOut-center lucid-ToolTip-FlyOut-default"
    onMouseOut={[Function]}
    onMouseOver={[Function]}
    style={
      Object {
        "maxWidth": 200,
      }
    }
  >
    <CrossIcon
      className="lucid-ToolTip-FlyOut-close"
      onClick={[Function]}
    />
    <h2
      className="lucid-ToolTip-FlyOut-Title"
    >
      Title
    </h2>
    ToolTip is a utility component to create a transient message anchored to another component.
  </ContextMenu.FlyOut>
</ContextMenu>
`;

exports[`ToolTip [common] example testing should match snapshot(s) for 3.variants 1`] = `
<ContextMenu
  alignment="center"
  className="lucid-ToolTip"
  direction="up"
  directonOffset={15}
  getAlignmentOffset={[Function]}
  isExpanded={true}
  minWidthOffset={0}
  onClickOut={null}
  onMouseOut={[Function]}
  onMouseOver={[Function]}
  portalId={null}
>
  <ContextMenu.Target
    className="lucid-ToolTip-Target"
    elementType="span"
  >
    <div>
      Target for 
      primary
    </div>
  </ContextMenu.Target>
  <ContextMenu.FlyOut
    className="lucid-ToolTip-FlyOut lucid-ToolTip-FlyOut-up lucid-ToolTip-FlyOut-center lucid-ToolTip-FlyOut-primary"
    onMouseOut={[Function]}
    onMouseOver={[Function]}
    style={
      Object {
        "maxWidth": 200,
      }
    }
  >
    <h2
      className="lucid-ToolTip-FlyOut-Title"
    >
      Primary
    </h2>
    ToolTip is a utility component to create a transient message anchored to another component.
  </ContextMenu.FlyOut>
</ContextMenu>
`;

exports[`ToolTip [common] example testing should match snapshot(s) for 3.variants 2`] = `
<ContextMenu
  alignment="center"
  className="lucid-ToolTip"
  direction="up"
  directonOffset={15}
  getAlignmentOffset={[Function]}
  isExpanded={true}
  minWidthOffset={0}
  onClickOut={null}
  onMouseOut={[Function]}
  onMouseOver={[Function]}
  portalId={null}
>
  <ContextMenu.Target
    className="lucid-ToolTip-Target"
    elementType="span"
  >
    <div>
      Target for 
      success
    </div>
  </ContextMenu.Target>
  <ContextMenu.FlyOut
    className="lucid-ToolTip-FlyOut lucid-ToolTip-FlyOut-up lucid-ToolTip-FlyOut-center lucid-ToolTip-FlyOut-success"
    onMouseOut={[Function]}
    onMouseOver={[Function]}
    style={
      Object {
        "maxWidth": 200,
      }
    }
  >
    <h2
      className="lucid-ToolTip-FlyOut-Title"
    >
      Success
    </h2>
    ToolTip is a utility component to create a transient message anchored to another component.
  </ContextMenu.FlyOut>
</ContextMenu>
`;

exports[`ToolTip [common] example testing should match snapshot(s) for 3.variants 3`] = `
<ContextMenu
  alignment="center"
  className="lucid-ToolTip"
  direction="up"
  directonOffset={15}
  getAlignmentOffset={[Function]}
  isExpanded={true}
  minWidthOffset={0}
  onClickOut={null}
  onMouseOut={[Function]}
  onMouseOver={[Function]}
  portalId={null}
>
  <ContextMenu.Target
    className="lucid-ToolTip-Target"
    elementType="span"
  >
    <div>
      Target for 
      warning
    </div>
  </ContextMenu.Target>
  <ContextMenu.FlyOut
    className="lucid-ToolTip-FlyOut lucid-ToolTip-FlyOut-up lucid-ToolTip-FlyOut-center lucid-ToolTip-FlyOut-warning"
    onMouseOut={[Function]}
    onMouseOver={[Function]}
    style={
      Object {
        "maxWidth": 200,
      }
    }
  >
    <h2
      className="lucid-ToolTip-FlyOut-Title"
    >
      Warning
    </h2>
    ToolTip is a utility component to create a transient message anchored to another component.
  </ContextMenu.FlyOut>
</ContextMenu>
`;

exports[`ToolTip [common] example testing should match snapshot(s) for 3.variants 4`] = `
<ContextMenu
  alignment="center"
  className="lucid-ToolTip"
  direction="up"
  directonOffset={15}
  getAlignmentOffset={[Function]}
  isExpanded={true}
  minWidthOffset={0}
  onClickOut={null}
  onMouseOut={[Function]}
  onMouseOver={[Function]}
  portalId={null}
>
  <ContextMenu.Target
    className="lucid-ToolTip-Target"
    elementType="span"
  >
    <div>
      Target for 
      danger
    </div>
  </ContextMenu.Target>
  <ContextMenu.FlyOut
    className="lucid-ToolTip-FlyOut lucid-ToolTip-FlyOut-up lucid-ToolTip-FlyOut-center lucid-ToolTip-FlyOut-danger"
    onMouseOut={[Function]}
    onMouseOver={[Function]}
    style={
      Object {
        "maxWidth": 200,
      }
    }
  >
    <h2
      className="lucid-ToolTip-FlyOut-Title"
    >
      Danger
    </h2>
    ToolTip is a utility component to create a transient message anchored to another component.
  </ContextMenu.FlyOut>
</ContextMenu>
`;

exports[`ToolTip [common] example testing should match snapshot(s) for 3.variants 5`] = `
<ContextMenu
  alignment="center"
  className="lucid-ToolTip"
  direction="up"
  directonOffset={15}
  getAlignmentOffset={[Function]}
  isExpanded={true}
  minWidthOffset={0}
  onClickOut={null}
  onMouseOut={[Function]}
  onMouseOver={[Function]}
  portalId={null}
>
  <ContextMenu.Target
    className="lucid-ToolTip-Target"
    elementType="span"
  >
    <div>
      Target for 
      info
    </div>
  </ContextMenu.Target>
  <ContextMenu.FlyOut
    className="lucid-ToolTip-FlyOut lucid-ToolTip-FlyOut-up lucid-ToolTip-FlyOut-center lucid-ToolTip-FlyOut-info"
    onMouseOut={[Function]}
    onMouseOver={[Function]}
    style={
      Object {
        "maxWidth": 200,
      }
    }
  >
    <h2
      className="lucid-ToolTip-FlyOut-Title"
    >
      Info
    </h2>
    ToolTip is a utility component to create a transient message anchored to another component.
  </ContextMenu.FlyOut>
</ContextMenu>
`;

exports[`ToolTip [common] example testing should match snapshot(s) for 3.variants 6`] = `
<ContextMenu
  alignment="center"
  className="lucid-ToolTip"
  direction="up"
  directonOffset={15}
  getAlignmentOffset={[Function]}
  isExpanded={true}
  minWidthOffset={0}
  onClickOut={null}
  onMouseOut={[Function]}
  onMouseOver={[Function]}
  portalId={null}
>
  <ContextMenu.Target
    className="lucid-ToolTip-Target"
    elementType="span"
  >
    <div>
      Target for 
      default
    </div>
  </ContextMenu.Target>
  <ContextMenu.FlyOut
    className="lucid-ToolTip-FlyOut lucid-ToolTip-FlyOut-up lucid-ToolTip-FlyOut-center lucid-ToolTip-FlyOut-default"
    onMouseOut={[Function]}
    onMouseOver={[Function]}
    style={
      Object {
        "maxWidth": 200,
      }
    }
  >
    <h2
      className="lucid-ToolTip-FlyOut-Title"
    >
      Default
    </h2>
    ToolTip is a utility component to create a transient message anchored to another component.
  </ContextMenu.FlyOut>
</ContextMenu>
`;

exports[`ToolTip [common] example testing should match snapshot(s) for 4.static 1`] = `
<ContextMenu
  alignment="center"
  className="lucid-ToolTip"
  direction="right"
  directonOffset={15}
  getAlignmentOffset={[Function]}
  isExpanded={true}
  minWidthOffset={0}
  onClickOut={null}
  onMouseOut={[Function]}
  onMouseOver={[Function]}
  portalId={null}
>
  <ContextMenu.Target
    className="lucid-ToolTip-Target"
    elementType="span"
  >
    <div>
      Target 
      right
       
      start
    </div>
  </ContextMenu.Target>
  <ContextMenu.FlyOut
    className="lucid-ToolTip-FlyOut lucid-ToolTip-FlyOut-right lucid-ToolTip-FlyOut-start lucid-ToolTip-FlyOut-default"
    onMouseOut={[Function]}
    onMouseOver={[Function]}
    style={
      Object {
        "maxWidth": 200,
      }
    }
  >
    <h2
      className="lucid-ToolTip-FlyOut-Title"
    >
      Title: 
      right
       
      start
    </h2>
    ToolTip is a utility component to create a transient message anchored to another component. My direction is "
    right
    ". My alignment is "
    start
    ".
  </ContextMenu.FlyOut>
</ContextMenu>
`;

exports[`ToolTip [common] example testing should match snapshot(s) for 4.static 2`] = `
<ContextMenu
  alignment="center"
  className="lucid-ToolTip"
  direction="right"
  directonOffset={15}
  getAlignmentOffset={[Function]}
  isExpanded={true}
  minWidthOffset={0}
  onClickOut={null}
  onMouseOut={[Function]}
  onMouseOver={[Function]}
  portalId={null}
>
  <ContextMenu.Target
    className="lucid-ToolTip-Target"
    elementType="span"
  >
    <div>
      Target 
      right
       
      center
    </div>
  </ContextMenu.Target>
  <ContextMenu.FlyOut
    className="lucid-ToolTip-FlyOut lucid-ToolTip-FlyOut-right lucid-ToolTip-FlyOut-center lucid-ToolTip-FlyOut-default"
    onMouseOut={[Function]}
    onMouseOver={[Function]}
    style={
      Object {
        "maxWidth": 200,
      }
    }
  >
    <h2
      className="lucid-ToolTip-FlyOut-Title"
    >
      Title: 
      right
       
      center
    </h2>
    ToolTip is a utility component to create a transient message anchored to another component. My direction is "
    right
    ". My alignment is "
    center
    ".
  </ContextMenu.FlyOut>
</ContextMenu>
`;

exports[`ToolTip [common] example testing should match snapshot(s) for 4.static 3`] = `
<ContextMenu
  alignment="center"
  className="lucid-ToolTip"
  direction="right"
  directonOffset={15}
  getAlignmentOffset={[Function]}
  isExpanded={true}
  minWidthOffset={0}
  onClickOut={null}
  onMouseOut={[Function]}
  onMouseOver={[Function]}
  portalId={null}
>
  <ContextMenu.Target
    className="lucid-ToolTip-Target"
    elementType="span"
  >
    <div>
      Target 
      right
       
      end
    </div>
  </ContextMenu.Target>
  <ContextMenu.FlyOut
    className="lucid-ToolTip-FlyOut lucid-ToolTip-FlyOut-right lucid-ToolTip-FlyOut-end lucid-ToolTip-FlyOut-default"
    onMouseOut={[Function]}
    onMouseOver={[Function]}
    style={
      Object {
        "maxWidth": 200,
      }
    }
  >
    <h2
      className="lucid-ToolTip-FlyOut-Title"
    >
      Title: 
      right
       
      end
    </h2>
    ToolTip is a utility component to create a transient message anchored to another component. My direction is "
    right
    ". My alignment is "
    end
    ".
  </ContextMenu.FlyOut>
</ContextMenu>
`;

exports[`ToolTip [common] example testing should match snapshot(s) for 4.static 4`] = `
<ContextMenu
  alignment="center"
  className="lucid-ToolTip"
  direction="up"
  directonOffset={15}
  getAlignmentOffset={[Function]}
  isExpanded={true}
  minWidthOffset={0}
  onClickOut={null}
  onMouseOut={[Function]}
  onMouseOver={[Function]}
  portalId={null}
>
  <ContextMenu.Target
    className="lucid-ToolTip-Target"
    elementType="span"
  >
    <div>
      Target 
      up
       
      start
    </div>
  </ContextMenu.Target>
  <ContextMenu.FlyOut
    className="lucid-ToolTip-FlyOut lucid-ToolTip-FlyOut-up lucid-ToolTip-FlyOut-start lucid-ToolTip-FlyOut-default"
    onMouseOut={[Function]}
    onMouseOver={[Function]}
    style={
      Object {
        "maxWidth": 200,
      }
    }
  >
    <h2
      className="lucid-ToolTip-FlyOut-Title"
    >
      Title: 
      up
       
      start
    </h2>
    ToolTip is a utility component to create a transient message anchored to another component. My direction is "
    up
    ". My alignment is "
    start
    ".
  </ContextMenu.FlyOut>
</ContextMenu>
`;

exports[`ToolTip [common] example testing should match snapshot(s) for 4.static 5`] = `
<ContextMenu
  alignment="center"
  className="lucid-ToolTip"
  direction="up"
  directonOffset={15}
  getAlignmentOffset={[Function]}
  isExpanded={true}
  minWidthOffset={0}
  onClickOut={null}
  onMouseOut={[Function]}
  onMouseOver={[Function]}
  portalId={null}
>
  <ContextMenu.Target
    className="lucid-ToolTip-Target"
    elementType="span"
  >
    <div>
      Target 
      up
       
      center
    </div>
  </ContextMenu.Target>
  <ContextMenu.FlyOut
    className="lucid-ToolTip-FlyOut lucid-ToolTip-FlyOut-up lucid-ToolTip-FlyOut-center lucid-ToolTip-FlyOut-default"
    onMouseOut={[Function]}
    onMouseOver={[Function]}
    style={
      Object {
        "maxWidth": 200,
      }
    }
  >
    <h2
      className="lucid-ToolTip-FlyOut-Title"
    >
      Title: 
      up
       
      center
    </h2>
    ToolTip is a utility component to create a transient message anchored to another component. My direction is "
    up
    ". My alignment is "
    center
    ".
  </ContextMenu.FlyOut>
</ContextMenu>
`;

exports[`ToolTip [common] example testing should match snapshot(s) for 4.static 6`] = `
<ContextMenu
  alignment="center"
  className="lucid-ToolTip"
  direction="up"
  directonOffset={15}
  getAlignmentOffset={[Function]}
  isExpanded={true}
  minWidthOffset={0}
  onClickOut={null}
  onMouseOut={[Function]}
  onMouseOver={[Function]}
  portalId={null}
>
  <ContextMenu.Target
    className="lucid-ToolTip-Target"
    elementType="span"
  >
    <div>
      Target 
      up
       
      end
    </div>
  </ContextMenu.Target>
  <ContextMenu.FlyOut
    className="lucid-ToolTip-FlyOut lucid-ToolTip-FlyOut-up lucid-ToolTip-FlyOut-end lucid-ToolTip-FlyOut-default"
    onMouseOut={[Function]}
    onMouseOver={[Function]}
    style={
      Object {
        "maxWidth": 200,
      }
    }
  >
    <h2
      className="lucid-ToolTip-FlyOut-Title"
    >
      Title: 
      up
       
      end
    </h2>
    ToolTip is a utility component to create a transient message anchored to another component. My direction is "
    up
    ". My alignment is "
    end
    ".
  </ContextMenu.FlyOut>
</ContextMenu>
`;

exports[`ToolTip [common] example testing should match snapshot(s) for 4.static 7`] = `
<ContextMenu
  alignment="center"
  className="lucid-ToolTip"
  direction="down"
  directonOffset={15}
  getAlignmentOffset={[Function]}
  isExpanded={true}
  minWidthOffset={0}
  onClickOut={null}
  onMouseOut={[Function]}
  onMouseOver={[Function]}
  portalId={null}
>
  <ContextMenu.Target
    className="lucid-ToolTip-Target"
    elementType="span"
  >
    <div>
      Target 
      down
       
      start
    </div>
  </ContextMenu.Target>
  <ContextMenu.FlyOut
    className="lucid-ToolTip-FlyOut lucid-ToolTip-FlyOut-down lucid-ToolTip-FlyOut-start lucid-ToolTip-FlyOut-default"
    onMouseOut={[Function]}
    onMouseOver={[Function]}
    style={
      Object {
        "maxWidth": 200,
      }
    }
  >
    <h2
      className="lucid-ToolTip-FlyOut-Title"
    >
      Title: 
      down
       
      start
    </h2>
    ToolTip is a utility component to create a transient message anchored to another component. My direction is "
    down
    ". My alignment is "
    start
    ".
  </ContextMenu.FlyOut>
</ContextMenu>
`;

exports[`ToolTip [common] example testing should match snapshot(s) for 4.static 8`] = `
<ContextMenu
  alignment="center"
  className="lucid-ToolTip"
  direction="down"
  directonOffset={15}
  getAlignmentOffset={[Function]}
  isExpanded={true}
  minWidthOffset={0}
  onClickOut={null}
  onMouseOut={[Function]}
  onMouseOver={[Function]}
  portalId={null}
>
  <ContextMenu.Target
    className="lucid-ToolTip-Target"
    elementType="span"
  >
    <div>
      Target 
      down
       
      center
    </div>
  </ContextMenu.Target>
  <ContextMenu.FlyOut
    className="lucid-ToolTip-FlyOut lucid-ToolTip-FlyOut-down lucid-ToolTip-FlyOut-center lucid-ToolTip-FlyOut-default"
    onMouseOut={[Function]}
    onMouseOver={[Function]}
    style={
      Object {
        "maxWidth": 200,
      }
    }
  >
    <h2
      className="lucid-ToolTip-FlyOut-Title"
    >
      Title: 
      down
       
      center
    </h2>
    ToolTip is a utility component to create a transient message anchored to another component. My direction is "
    down
    ". My alignment is "
    center
    ".
  </ContextMenu.FlyOut>
</ContextMenu>
`;

exports[`ToolTip [common] example testing should match snapshot(s) for 4.static 9`] = `
<ContextMenu
  alignment="center"
  className="lucid-ToolTip"
  direction="down"
  directonOffset={15}
  getAlignmentOffset={[Function]}
  isExpanded={true}
  minWidthOffset={0}
  onClickOut={null}
  onMouseOut={[Function]}
  onMouseOver={[Function]}
  portalId={null}
>
  <ContextMenu.Target
    className="lucid-ToolTip-Target"
    elementType="span"
  >
    <div>
      Target 
      down
       
      end
    </div>
  </ContextMenu.Target>
  <ContextMenu.FlyOut
    className="lucid-ToolTip-FlyOut lucid-ToolTip-FlyOut-down lucid-ToolTip-FlyOut-end lucid-ToolTip-FlyOut-default"
    onMouseOut={[Function]}
    onMouseOver={[Function]}
    style={
      Object {
        "maxWidth": 200,
      }
    }
  >
    <h2
      className="lucid-ToolTip-FlyOut-Title"
    >
      Title: 
      down
       
      end
    </h2>
    ToolTip is a utility component to create a transient message anchored to another component. My direction is "
    down
    ". My alignment is "
    end
    ".
  </ContextMenu.FlyOut>
</ContextMenu>
`;

exports[`ToolTip [common] example testing should match snapshot(s) for 4.static 10`] = `
<ContextMenu
  alignment="center"
  className="lucid-ToolTip"
  direction="left"
  directonOffset={15}
  getAlignmentOffset={[Function]}
  isExpanded={true}
  minWidthOffset={0}
  onClickOut={null}
  onMouseOut={[Function]}
  onMouseOver={[Function]}
  portalId={null}
>
  <ContextMenu.Target
    className="lucid-ToolTip-Target"
    elementType="span"
  >
    <div>
      Target 
      left
       
      start
    </div>
  </ContextMenu.Target>
  <ContextMenu.FlyOut
    className="lucid-ToolTip-FlyOut lucid-ToolTip-FlyOut-left lucid-ToolTip-FlyOut-start lucid-ToolTip-FlyOut-default"
    onMouseOut={[Function]}
    onMouseOver={[Function]}
    style={
      Object {
        "maxWidth": 200,
      }
    }
  >
    <h2
      className="lucid-ToolTip-FlyOut-Title"
    >
      Title: 
      left
       
      start
    </h2>
    ToolTip is a utility component to create a transient message anchored to another component. My direction is "
    left
    ". My alignment is "
    start
    ".
  </ContextMenu.FlyOut>
</ContextMenu>
`;

exports[`ToolTip [common] example testing should match snapshot(s) for 4.static 11`] = `
<ContextMenu
  alignment="center"
  className="lucid-ToolTip"
  direction="left"
  directonOffset={15}
  getAlignmentOffset={[Function]}
  isExpanded={true}
  minWidthOffset={0}
  onClickOut={null}
  onMouseOut={[Function]}
  onMouseOver={[Function]}
  portalId={null}
>
  <ContextMenu.Target
    className="lucid-ToolTip-Target"
    elementType="span"
  >
    <div>
      Target 
      left
       
      center
    </div>
  </ContextMenu.Target>
  <ContextMenu.FlyOut
    className="lucid-ToolTip-FlyOut lucid-ToolTip-FlyOut-left lucid-ToolTip-FlyOut-center lucid-ToolTip-FlyOut-default"
    onMouseOut={[Function]}
    onMouseOver={[Function]}
    style={
      Object {
        "maxWidth": 200,
      }
    }
  >
    <h2
      className="lucid-ToolTip-FlyOut-Title"
    >
      Title: 
      left
       
      center
    </h2>
    ToolTip is a utility component to create a transient message anchored to another component. My direction is "
    left
    ". My alignment is "
    center
    ".
  </ContextMenu.FlyOut>
</ContextMenu>
`;

exports[`ToolTip [common] example testing should match snapshot(s) for 4.static 12`] = `
<ContextMenu
  alignment="center"
  className="lucid-ToolTip"
  direction="left"
  directonOffset={15}
  getAlignmentOffset={[Function]}
  isExpanded={true}
  minWidthOffset={0}
  onClickOut={null}
  onMouseOut={[Function]}
  onMouseOver={[Function]}
  portalId={null}
>
  <ContextMenu.Target
    className="lucid-ToolTip-Target"
    elementType="span"
  >
    <div>
      Target 
      left
       
      end
    </div>
  </ContextMenu.Target>
  <ContextMenu.FlyOut
    className="lucid-ToolTip-FlyOut lucid-ToolTip-FlyOut-left lucid-ToolTip-FlyOut-end lucid-ToolTip-FlyOut-default"
    onMouseOut={[Function]}
    onMouseOver={[Function]}
    style={
      Object {
        "maxWidth": 200,
      }
    }
  >
    <h2
      className="lucid-ToolTip-FlyOut-Title"
    >
      Title: 
      left
       
      end
    </h2>
    ToolTip is a utility component to create a transient message anchored to another component. My direction is "
    left
    ". My alignment is "
    end
    ".
  </ContextMenu.FlyOut>
</ContextMenu>
`;
